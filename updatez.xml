<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AElFTkSuQmCC
</value>
  </data>
  <metadata name="timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="timer2.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>104, 17</value>
  </metadata>
</root>
